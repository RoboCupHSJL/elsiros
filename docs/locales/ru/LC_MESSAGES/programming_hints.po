# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Starkit Team
# This file is distributed under the same license as the ELSIROS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ELSIROS \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-15 22:07+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/programming_hints.md:1
msgid "Robot programming hints"
msgstr "Руководство программирования Робота Robokit-1"

#: ../../source/programming_hints.md:3
msgid ""
"It is not advised to play games between completely equal teams. In most "
"cases you can observe non-interesting game development with rare goals "
"and useless struggling. Therefore, we include 2 styles of playing "
"algorithms: normal and old style which was practiced in year 2020."
msgstr ""
"Не рекомендуется играть игру между полностью одинаковыми командами. В "
"большинстве случаем вы будете наблюдать неинтересную игру с малым "
"количеством голов и безрезультатной борьбой. Поэтому мы вам предоставляем"
" 2 разных алгоритма игры: нормальный и старого стиля, который "
"использовался в 2020 году."

#: ../../source/programming_hints.md:5
msgid ""
"Real Robots use OpenMV H7 smart camera as vision sensor and onboard "
"computing module. This is single core controller with Micropython bare "
"metal programming. This means that controller is not capable to provide "
"walking engine and camera vision simultaneously. In order to update "
"information about ball position and self-localization robot has to stop "
"into stabile stand-up position and move head to various positions to "
"observe surroundings. During head moving ball position can be red in case"
" if ball is in visible sector of camera. Camera have 46 degrees of "
"aperture."
msgstr ""
"Реальные роботы используют смарт камеру OpenMV H7 в качестве визуального "
"сенсора и в качестве вычислительного модуля. Это одноядерный контроллер "
"со средой программирования Micropython без операционной системы. Это "
"означает, что контроллер не позволяет одновременно использовать функцию "
"хождения и получения видеокадра. Для обновления информации о нахождении "
"мяча и само-локализации робот должен остановиться в стабилизированной "
"вертикальной позиции и поворачивать голову в разные сектора обзора для "
"осмотра окрестностей.  При поворотах головы положение мяча может быть "
"считано, если мяч оказался в видимом секторе камеры. Апертура камеры 46 "
"градусов."

#: ../../source/programming_hints.md:7
msgid ""
"During observation of surroundings at stand-up position of robot camera "
"catches additional information about robots’ localization from objects "
"like goal posts, field marking and green field border. The more pictures "
"are taken the better accuracy of localization."
msgstr ""
"В процессе обзора камерой в вертикальной позиции робот также получает "
"информацию, полезную для локализации, такую как стойки ворот, разметка "
"поля и граница зеленого поля. Чем больше кадров обработано с разных "
"ракурсов, тем точнее информация о локализации.  "

#: ../../source/programming_hints.md:9
msgid ""
"Robot can detect obstacles from vision sensor. Obstacle avoidance "
"algorithm is included into path planning, but it is not perfect in all "
"aspects. There is not implementation of kicking ball strategy with "
"accounting possible obstacles at ball path. Detected and updated data "
"about obstacles are stored in list self.glob.obstacles"
msgstr ""
"Робот может обновлять информацию о препятствиях из полученных кадров. В "
"алгоритм построения траекторий включен алгоритм обхода препятствий, "
"который не совсем совершенен. Нет планирования направления удара с учетом"
" препятствий на пути мяча. Список self.glob.obstacles содержит информацию"
" об обнаруженных и обновленных данных о препятствиях."

#: ../../source/programming_hints.md:11
msgid ""
"Communication between team members is legal by rules through UDP "
"messages. Communication is not implemented in current game strategy, but "
"it is allowed to be developed by teams. Communication inside team can "
"help to organize team play. ELSIROS API provides functionality for "
"messaging between team members."
msgstr ""
"Коммуникация между игроками разрешена по правилам через UDP сообщения "
"WIFI. Коммуникация не реализована в текущей стратегии, но команды могут "
"её разрабатывать. Коммуникация внутри команды может помочь организовать "
"более эффективную игру. ELSIROS API содержит средства коммуникации между "
"членами команды. "

#: ../../source/programming_hints.md:13
msgid ""
"Coordinate system of field for purposes of strategy is different from "
"absolute coordinate system of field. For purpose of strategy own goals "
"are located at part of field with negative X coordinate, opponents’ goals"
" are located at positive X coordinate. Positive Y coordinate is at left "
"flank of attack, negative Y coordinate is at right flank of attack. Yaw "
"heading is zero if it is directed from center of own goals to center of "
"opponents’ goals. Yaw is changed from 0 to math.pi with turning to left "
"from zero direction. Yaw is changed from 0 to -math.pi with turning from "
"zero direction to right. Z coordinate is directed to up with zero on "
"floor."
msgstr ""
"Координатное пространство, используемое в стратегии, отличается от "
"абсолютного координатного пространства в симуляции. Для целей стратегии "
"собственные ворота располагаются в части поля с отрицательными значениями"
" координаты X, ворота противника располагаются в части поля с "
"положительными значениями координаты X. Положительные значения Y "
"расположены на левом фланге атаки, отрицательные значения Y расположены "
"на правом фланге атаки. Азимут yaw имеет нулевое значение, если направлен"
" из центра поля к воротам противника. Yaw изменяется от 0 к math.pi при "
"вращении вокруг вертикальной оси влево от нулевого направления. Yaw "
"изменяется от 0 к -math.pi при вращении вокруг вертикальной оси вправо от"
" нулевого направления. Координата Z направлена вверх с нулём на "
"поверхности поля."

#: ../../source/programming_hints.md:15
msgid ""
"Normal ‘forward’ player uses predefined strategy formulated by vector "
"matrix. Matrix is coded in file strategy_data.json  This file is readable"
" and editable as well as normal text file. There is a dictionary with one"
" key ‘strategy_data’. Value of key ‘strategy_data’ is a list with default"
" number of elements 234. Each element of list represents rectangular "
"sector of soccer field with size 20cmX20cm. For each sector there "
"assigned a vector representing yaw direction of shooting when ball is "
"positioned in this sector. Power of shot is coded by attenuation value: 1"
" – standard power, 2 – power reduced 2 times, 3- power reduced 3 times. "
"Each element of list is coded as follows: [column, row, power, yaw]. "
"Soccer field is split to sectors in 13 rows and 18 columns.  Column 0 is "
"near own goals, column 17 is near opposed goals. Row 0 is in positive Y "
"coordinate, row 12 is in negative Y coordinate."
msgstr ""
"Нормальный игрок ‘forward’ использует "
"предварительно запрограммированную стратегию, "
"заложенную в матрицу векторов. Матрица "
"закодирована в файле strategy_data.json . "
"Этот файл является читаемым и "
"редактируемым так же как и обычный "
"текстовый файл. В файле содержится "
"словарь с одним ключом ‘strategy_data’. "
"Под ключом ‘strategy_data’ содержится список"
" с числом элементов по умолчанию 234."
" Каждый элемент списка представляет "
"квадратный сектор поля размерами 20cmX20cm."
" Каждому сектору назначен вектор "
"представляющий из себя направление удара "
"в ситуации когда мяч оказался в "
"этом секторе. Сила удара закодирована в"
" виде ослабляющего коэффициента: 1 – "
"стандартный удар, 2 – удар ослабленный"
" в 2 раза, 3- удар ослабленный "
"в 3 раза. Каждый элемент списка "
"закодирован следующим: [столбец, ряд, сила,"
" yaw]. Футбольное поле разбито на 13"
" рядов и 18 столбцов. Столбец 0 "
"находится возле своих ворот, столбец 17"
" находится возле ворот противника. Ряд "
"0 находится в области с положительной"
" Y координатой, ряд 12 находится в"
" области с отрицательной Y координатой."

#: ../../source/programming_hints.md:17
msgid ""
"![image](https://user-"
"images.githubusercontent.com/26925610/133053646-ee7dd1f7-8d13-417f-8264-eb5e24235e35.png)"
msgstr ""

#: ../../source/programming_hints.md:17
msgid "image"
msgstr ""

#: ../../source/programming_hints.md:19
msgid ""
"During game player can take 4 roles: ‘forward’, ‘goalkeeper’, "
"‘penalty_Shooter’, ‘penlaty_Goalkeeper’. For each role strategy code is "
"different. Launcher module chooses role of player to launch depending on "
"number of player and secondary game state. In case if number of player is"
" 1 then appointed role will be ‘goalkeeper’ or ‘penalty_Goalkeeper’. In "
"case if number of player is other than 1 then appointed role will be "
"‘forward’ or ‘penalty_Shooter’. In case if secondary game state is "
"‘STATE_PENALTYSHOOT’ then player with number 1 will be appointed as "
"‘penlaty_Goalkeeper’ and player with other number will be appointed to "
"role ‘penalty_Shooter’.  Default public player controller strategy "
"appoints player role ‘goalkeeper’ to player with number 1 and ‘forward’ "
"to player with number other than 1 in all other secondary game states. "
"Teams can modify strategy and use various roles depending on secondary "
"game state. According to current game controller there could be following"
" secondary game states: STATE_NORMAL=0, STATE_PENALTYSHOOT=1, "
"STATE_OVERTIME=2, STATE_TIMEOUT=3, STATE_DIRECT_FREEKICK=4, "
"STATE_INDIRECT_FREEKICK=5, STATE_PENALTYKICK=6, STATE_CORNERKICK=7, "
"STATE_GOALKICK=8, STATE_THROWIN=9, DROPBALL=128, UNKNOWN=255"
msgstr ""
"В процессе игры игрок может принимать 4 разные роли: ‘forward’, "
"‘goalkeeper’, ‘penalty_Shooter’, ‘penlaty_Goalkeeper’. Для каждой роли "
"программа стратегии разная. Модуль launcher выбирает роль игрока для "
"запуска в зависимости от номера игрока и вторичного состояния игры. В "
"случае если номер игрока 1 назначаемая роль будет ‘goalkeeper’ или "
"‘penalty_Goalkeeper’. В случае, если номер игрока отличается от 1, тогда "
"назначаемая роль ‘forward’ или ‘penalty_Shooter’. В случае secondary game"
" state = ‘STATE_PENALTYSHOOT’ тогда игрок с номером 1 будет назначен "
"‘penlaty_Goalkeeper’, а игрок с номером, отличающимся от 1 будет назначен"
" на роль ‘penalty_Shooter’. Котроллер игры, поставляемый по умолчанию "
"будет назначать игроку с номером 1 ‘goalkeeper’, а игроку с номером, "
"отличающимся от 1 роль ‘forward’ во всех остальных значениях secondary "
"game state. Команды могут менять стратегию игры путем назначения "
"различных ролей в зависимости от величины secondary game state, "
"поставляемой геймконтроллером. Текущий геймконтроллер может поставлять "
"следующие значения secondary game state: STATE_NORMAL=0, "
"STATE_PENALTYSHOOT=1, STATE_OVERTIME=2, STATE_TIMEOUT=3, "
"STATE_DIRECT_FREEKICK=4, STATE_INDIRECT_FREEKICK=5, STATE_PENALTYKICK=6, "
"STATE_CORNERKICK=7, STATE_GOALKICK=8, STATE_THROWIN=9, DROPBALL=128, "
"UNKNOWN=255"

